#%RAML 0.8

title: Mulgrew
version: v1
protocols: [ HTTPS ]
baseUri: https://api.tunk.io/{version}
mediaType: application/json
securitySchemes:
    - oauth_2_0:
        description: |
            Dropbox supports OAuth 2.0 for authenticating all API requests.
        type: OAuth 2.0
        describedBy:
            headers:
                Authorization:
                    description: |
                       Used to send a valid OAuth 2 access token. Do not use
                       with the "access_token" query string parameter.
                    type: string
            queryParameters:
                access_token:
                    description: |
                       Used to send a valid OAuth 2 access token. Do not use together with
                       the "Authorization" header
                    type: string
            responses:
                401:
                    description: |
                        Bad or expired token. This can happen if the user or Dropbox
                        revoked or expired an access token. To fix, you should re-
                        authenticate the user.
                403:
                    description: |
                        Bad OAuth request (wrong consumer key, bad nonce, expired
                        timestamp...). Unfortunately, re-authenticating the user won't help here.
        settings:
          authorizationUri: https://www.dropbox.com/1/oauth2/authorize
          accessTokenUri: https://api.dropbox.com/1/oauth2/token
          authorizationGrants: [ code, token ]

/notebook:
  /new:
    securedBy: [oauth_2_0]
    post:
  /{id}:
    securedBy: [oauth_2_0]
    get:
      queryParameters:
        token:
          type: string
          required: true
    post:
    delete:
  /list:
    securedBy: [oauth_2_0]
    get:
  /add:
    /note:
      /{id}:
        securedBy: [oauth_2_0]
        post:
/note:
  /new:
    securedBy: [oauth_2_0]
    post:
      queryParameters:
        title:
        text:
  /{id}:
    securedBy: [oauth_2_0]
    get:
    post:
      queryParameters:
        title:
        text:
    delete:
  /list:
    securedBy: [oauth_2_0]
    get:
/tags:
  get:
    queryParameters:
      term:
      sort:
/user:
  /new:
    post:
  /{id}:
    get:
    delete:
    post:
/signin:
  post: